name: Run tests

on:
  push:
    branches: [main]
    paths-ignore:
      - "*.md"
      - "*.in"
      - "*.txt"

  pull_request:
    branches: [main]
    paths-ignore:
      - "*.md"
      - "*.in"
      - "*.txt"

jobs:
  build-wheel:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          pip install flake8

      - name: Lint with flake8
        run: |
          flake8 --show-source --statistics

      - name: Install pypa build
        run: python -m pip install build

      - name: Create wheel and sdist
        run: python -m build -s -w --outdir dist .

      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: sdist
          path: dist/*.tar.gz

      - name: Upload wheel
        uses: actions/upload-artifact@v3
        with:
          name: wheel
          path: dist/*.whl

  test-otio-git:
    needs:
    - build-wheel
    env:
      plugin_name: "otio_aaf_plugin"

    name: "OpenTimelineIO git@remove_aaf_adapter_v1"
    strategy:
      matrix:
        python-version: ["2.7", "3.7", "3.8", "3.9", "3.10"]
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Download wheel
      uses: actions/download-artifact@v3
      with:
        name: wheel
        path: dist/

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov wheel -V pyaaf2==1.4.0
        pip install git+https://github.com/markreidvfx/OpenTimelineIO@remove_aaf_adapter_v1
        # pip install pytest pytest-cov -V pyaaf2==1.4.0 -V OpenTimelineIO==0.14.1

    - name: Run Unit Tests
      shell: bash
      run: |
        python -m pip install dist/*.whl --no-index
        pytest -v tests

  latest-release:
    needs: test-otio-git
    runs-on: ubuntu-latest
    steps:
      - name: Download sdist
        uses: actions/download-artifact@v3
        with:
          name: sdist
          path: dist

      - name: Download wheel
        uses: actions/download-artifact@v3
        with:
          name: wheel
          path: dist

      - uses: "marvinpinto/action-automatic-releases@latest"
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: |
            dist/*.tar.gz
            dist/*.whl
